{"ast":null,"code":"(function ($) {\n  // ==== BEGINS PLUGGIN ====\n  $.fn.multislider = function (data, callback) {\n    // ==== CACHE DOM ====\n    var $multislider = $(this);\n    var $msContent = $multislider.find('.MS-content');\n    var $msRight = $multislider.find('button.MS-right');\n    var $msLeft = $multislider.find('button.MS-left');\n    var $imgFirst = $msContent.find('.item:first'); // === DETERMINE ACTION ====\n    // string = method | object or nothing is to initialize\n\n    if (typeof data === 'string') {\n      getStringArgs(data);\n      return $multislider;\n    } else if (typeof data === 'object' || typeof data === 'undefined') {\n      init();\n    } // ==== PLUGGIN VARIABLES ====\n\n\n    var $imgLast, totalWidth, numberVisibleSlides, animateDistance, animateSlideRight, animateSlideLeft, defaults, settings, animateDuration, autoSlideInterval; // = INITIALIZE =\n\n    function init() {\n      minifyContent(); // minify html\n\n      createSettings(); // merge defaults and user provided options\n\n      saveData(); // add data object to DOM el with reference to animation functions, allows for methods to reference at any time\n\n      selectAnimations(); // choose default animation\n    } // ==== EVENT HANDLERS ====\n\n\n    $msRight.on('click', animateSlideLeft);\n    $msLeft.on('click', animateSlideRight);\n    $multislider.on('click', '.MS-right, .MS-left', resetInterval);\n    $(window).on('resize', findItemWidth); // ==== FUNCTIONS (for days...) ====\n    // =================================\n\n    function pauseAbove() {\n      if (window.innerWidth > settings.pauseAbove) {\n        $multislider.addClass('ms-PAUSE');\n      }\n\n      $(window).on('resize', function () {\n        if (window.innerWidth > settings.pauseAbove) {\n          $multislider.addClass('ms-PAUSE');\n        } else {\n          $multislider.removeClass('ms-PAUSE');\n        }\n      });\n    }\n\n    function pauseBelow() {\n      if (window.innerWidth < settings.pauseBelow) {\n        $multislider.addClass('ms-PAUSE');\n      }\n\n      $(window).on('resize', function () {\n        if (window.innerWidth < settings.pauseBelow) {\n          $multislider.addClass('ms-PAUSE');\n        } else {\n          $multislider.removeClass('ms-PAUSE');\n        }\n      });\n    } // used if method is called after initialization\n\n\n    function getStringArgs(str) {\n      if (typeof $multislider.data(str) !== 'undefined') {\n        $multislider.data(str)();\n      } else {\n        console.error(\"Multislider currently only accepts the following methods: next, prev, pause, play\");\n      }\n    } // saves data object to DOM element\n\n\n    function saveData() {\n      $multislider.data({\n        \"pause\": function () {\n          $multislider.addClass('ms-PAUSE');\n        },\n        \"unPause\": function () {\n          $multislider.removeClass('ms-PAUSE');\n        },\n        \"continuous\": function () {\n          $multislider.removeClass('ms-PAUSE');\n          continuousLeft();\n        },\n        \"next\": function () {\n          overRidePause(singleLeft);\n        },\n        \"nextAll\": function () {\n          overRidePause(allLeft);\n        },\n        \"prev\": function () {\n          overRidePause(singleRight);\n        },\n        \"prevAll\": function () {\n          overRidePause(allRight);\n        },\n        \"settings\": settings\n      });\n    } // used when calling 'next', 'prev' methods\n\n\n    function overRidePause(animation) {\n      if ($multislider.hasClass('ms-PAUSE')) {\n        $multislider.removeClass('ms-PAUSE');\n        animation();\n        $multislider.addClass('ms-PAUSE');\n      } else {\n        animation();\n      }\n\n      resetInterval();\n    } // CRITICAL for items to be perfectly side-by-side without floating them\n\n\n    function minifyContent() {\n      $msContent.contents().filter(function () {\n        return this.nodeType == 3 && !/\\S/.test(this.nodeValue);\n      }).remove();\n    } // updated options with defaults, measure slide widths for animation calculations, carry out setting implementations\n\n\n    function createSettings() {\n      defaults = settings || {\n        continuous: false,\n        // endless scrolling with no pauses\n        slideAll: false,\n        // slide all visible slides, or just one at a time\n        // autoSlide: true,\t// DEPRECATED\n        interval: 2000,\n        // time bewteen slide animation, 0 or 'false' prevents auto-sliding\n        duration: 500,\n        // duration of slide animation\n        hoverPause: true,\n        // pause slideshow on hover\n        pauseAbove: null,\n        // pause above specified screen width\n        pauseBelow: null // pause below specified screen width\n\n      };\n      settings = $.extend({}, defaults, data);\n      findItemWidth();\n      animateDuration = settings.duration;\n\n      if (settings.hoverPause) {\n        pauseHover();\n      } // autoSlide is being depricated | Feb 2 2017\n\n\n      if (settings.continuous !== true && settings.interval !== 0 && settings.interval !== false && settings.autoSlide !== false) {\n        autoSlide();\n      }\n\n      if (settings.pauseAbove !== null && typeof settings.pauseAbove === 'number') {\n        pauseAbove();\n      }\n\n      if (settings.pauseBelow !== null && typeof settings.pauseBelow === 'number') {\n        pauseBelow();\n      }\n    } // determine between single and multi-slide animations\n\n\n    function selectAnimations() {\n      if (settings.continuous) {\n        settings.autoSlide = false;\n        continuousLeft();\n      } else if (settings.slideAll) {\n        animateSlideRight = $multislider.data('prevAll');\n        animateSlideLeft = $multislider.data('nextAll');\n      } else {\n        animateSlideRight = $multislider.data('prev');\n        animateSlideLeft = $multislider.data('next');\n      }\n    } // measure slide width, for animation calculations\n\n\n    function findItemWidth() {\n      reTargetSlides();\n      animateDistance = $imgFirst.width();\n      var left = parseInt($msContent.find('.item:first').css('padding-left'));\n      var right = parseInt($msContent.find('.item:first').css('padding-right'));\n\n      if (left !== 0) {\n        animateDistance += left;\n      }\n\n      if (right !== 0) {\n        animateDistance += right;\n      }\n    } // recursive auto-slide loop\n\n\n    function autoSlide() {\n      autoSlideInterval = setInterval(function () {\n        if (!$multislider.hasClass('ms-PAUSE')) {\n          animateSlideLeft();\n        }\n      }, settings.interval);\n    }\n\n    function resetInterval() {\n      if (settings.interval !== 0 && settings.interval !== false && settings.continuous !== true) {\n        clearInterval(autoSlideInterval);\n        autoSlide();\n      }\n    } // target first and last visible slides before each new animation\n\n\n    function reTargetSlides() {\n      $imgFirst = $msContent.find('.item:first');\n      $imgLast = $msContent.find('.item:last');\n    } // prevent animation firing if multislider is currently animating\n    // all animations pass through this function, which emits events, and adds/removes animating class\n\n\n    function isItAnimating(callback) {\n      if (!$multislider.hasClass('ms-animating') && !$multislider.hasClass('ms-HOVER') && !$multislider.hasClass('ms-PAUSE')) {\n        $multislider.trigger('ms.before.animate'); // event!\n\n        $multislider.addClass('ms-animating');\n        callback(); //callback is animation\n      }\n    } // update multislider at the end of each animation\n\n\n    function doneAnimating() {\n      if ($multislider.hasClass('ms-animating')) {\n        $multislider.removeClass('ms-animating');\n        $multislider.trigger('ms.after.animate'); // event!\n      }\n    } // logic for pausing and restarting the multislider on hover\n\n\n    function pauseHover() {\n      // continuous scroll pause slightly different\n      if (settings.continuous) {\n        $msContent.on('mouseover', function () {\n          doneAnimating();\n          $msContent.children('.item:first').stop();\n        });\n        $msContent.on('mouseout', function () {\n          continuousLeft();\n        });\n      } else {\n        // regular animation pausing\n        $msContent.on('mouseover', function () {\n          $multislider.addClass('ms-HOVER');\n        });\n        $msContent.on('mouseout', function () {\n          $multislider.removeClass('ms-HOVER');\n        });\n      }\n    } // calculate remaining animation, if stopped mid-animation and resuming\n\n\n    function midAnimateResume() {\n      animateDuration = settings.duration;\n      var currentMargin = parseFloat($msContent.find('.item:first').css(\"margin-left\"));\n      var percentageRemaining = 1 - currentMargin / -(animateDistance - 1);\n      animateDuration = percentageRemaining * animateDuration;\n    } // determine how many slides need to be moved over, if slideAll is true\n\n\n    function calcNumSlidesToMove() {\n      totalWidth = $msContent.width(); // total width of .MS-content containing all visible slides\n\n      numberVisibleSlides = Math.floor(totalWidth / animateDistance); // number of (visible) slides needed to be moved in each animation\n    } // ==== ANIMATION FUNCTIONS ====\n    // =============================\n\n\n    function continuousLeft() {\n      isItAnimating(function () {\n        reTargetSlides();\n        midAnimateResume();\n        $imgFirst.animate({\n          marginLeft: -(animateDistance + 1)\n        }, {\n          duration: animateDuration,\n          easing: \"linear\",\n          complete: function () {\n            $imgFirst.insertAfter($imgLast).removeAttr(\"style\");\n            doneAnimating();\n            continuousLeft();\n          }\n        });\n      });\n    }\n\n    function allLeft() {\n      isItAnimating(function () {\n        reTargetSlides();\n        calcNumSlidesToMove();\n        var $clonedItemSet = $msContent.children('.item').clone();\n        var filteredClones = $clonedItemSet.splice(0, numberVisibleSlides);\n        $msContent.append(filteredClones);\n        $imgFirst.animate({\n          marginLeft: -totalWidth\n        }, {\n          duration: animateDuration,\n          easing: \"swing\",\n          complete: function () {\n            $($msContent.children('.item').splice(0, numberVisibleSlides)).remove();\n            doneAnimating();\n          }\n        });\n      });\n    }\n\n    function allRight() {\n      isItAnimating(function () {\n        reTargetSlides();\n        calcNumSlidesToMove();\n        var numberTotalSlides = $msContent.children('.item').length;\n        var $clonedItemSet = $msContent.children('.item').clone();\n        var filteredClones = $clonedItemSet.splice(numberTotalSlides - numberVisibleSlides, numberTotalSlides);\n        $($(filteredClones)[0]).css('margin-left', -totalWidth); // give clone array negative margin before preppending\n\n        $msContent.prepend(filteredClones);\n        reTargetSlides();\n        $imgFirst.animate({\n          marginLeft: 0\n        }, {\n          duration: animateDuration,\n          easing: \"swing\",\n          complete: function () {\n            numberTotalSlides = $msContent.find('.item').length;\n            $($msContent.find('.item').splice(numberTotalSlides - numberVisibleSlides, numberTotalSlides)).remove();\n            $imgFirst.removeAttr('style');\n            doneAnimating();\n          }\n        });\n      });\n    }\n\n    function singleLeft() {\n      isItAnimating(function () {\n        reTargetSlides();\n        $imgFirst.animate({\n          marginLeft: -animateDistance\n        }, {\n          duration: animateDuration,\n          easing: \"swing\",\n          complete: function () {\n            $imgFirst.detach().removeAttr('style').appendTo($msContent);\n            doneAnimating();\n          }\n        });\n      });\n    }\n\n    function singleRight() {\n      isItAnimating(function () {\n        reTargetSlides();\n        $imgLast.css('margin-left', -animateDistance).prependTo($msContent);\n        $imgLast.animate({\n          marginLeft: 0\n        }, {\n          duration: animateDuration,\n          easing: \"swing\",\n          complete: function () {\n            $imgLast.removeAttr(\"style\");\n            doneAnimating();\n          }\n        });\n      });\n    }\n\n    return $multislider;\n  };\n})(jQuery);","map":{"version":3,"sources":["D:/Code/REACT/clint/src/Home_componant/js/multislider.js"],"names":["$","fn","multislider","data","callback","$multislider","$msContent","find","$msRight","$msLeft","$imgFirst","getStringArgs","init","$imgLast","totalWidth","numberVisibleSlides","animateDistance","animateSlideRight","animateSlideLeft","defaults","settings","animateDuration","autoSlideInterval","minifyContent","createSettings","saveData","selectAnimations","on","resetInterval","window","findItemWidth","pauseAbove","innerWidth","addClass","removeClass","pauseBelow","str","console","error","continuousLeft","overRidePause","singleLeft","allLeft","singleRight","allRight","animation","hasClass","contents","filter","nodeType","test","nodeValue","remove","continuous","slideAll","interval","duration","hoverPause","extend","pauseHover","autoSlide","reTargetSlides","width","left","parseInt","css","right","setInterval","clearInterval","isItAnimating","trigger","doneAnimating","children","stop","midAnimateResume","currentMargin","parseFloat","percentageRemaining","calcNumSlidesToMove","Math","floor","animate","marginLeft","easing","complete","insertAfter","removeAttr","$clonedItemSet","clone","filteredClones","splice","append","numberTotalSlides","length","prepend","detach","appendTo","prependTo","jQuery"],"mappings":"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","sourcesContent":["(function($) {\n\n    // ==== BEGINS PLUGGIN ====\n    $.fn.multislider = function(data, callback) {\n\n        // ==== CACHE DOM ====\n        var $multislider = $(this);\n        var $msContent = $multislider.find('.MS-content');\n        var $msRight = $multislider.find('button.MS-right');\n        var $msLeft = $multislider.find('button.MS-left');\n        var $imgFirst = $msContent.find('.item:first');\n\n        // === DETERMINE ACTION ====\n        // string = method | object or nothing is to initialize\n        if (typeof data === 'string') {\n            getStringArgs(data);\n            return $multislider;\n        } else if (typeof data === 'object' || typeof data === 'undefined') {\n            init();\n        }\n\n        // ==== PLUGGIN VARIABLES ====\n        var $imgLast,\n            totalWidth,\n            numberVisibleSlides,\n            animateDistance,\n            animateSlideRight,\n            animateSlideLeft,\n            defaults,\n            settings,\n            animateDuration,\n            autoSlideInterval;\n\n        // = INITIALIZE =\n        function init() {\n            minifyContent(); // minify html\n            createSettings(); // merge defaults and user provided options\n            saveData(); // add data object to DOM el with reference to animation functions, allows for methods to reference at any time\n            selectAnimations(); // choose default animation\n        }\n\n\n        // ==== EVENT HANDLERS ====\n        $msRight.on('click', animateSlideLeft);\n        $msLeft.on('click', animateSlideRight);\n        $multislider.on('click', '.MS-right, .MS-left', resetInterval);\n        $(window).on('resize', findItemWidth);\n\n\n        // ==== FUNCTIONS (for days...) ====\n        // =================================\n\n        function pauseAbove() {\n            if (window.innerWidth > settings.pauseAbove) { $multislider.addClass('ms-PAUSE'); }\n            $(window).on('resize', function() {\n                if (window.innerWidth > settings.pauseAbove) {\n                    $multislider.addClass('ms-PAUSE');\n                } else {\n                    $multislider.removeClass('ms-PAUSE');\n                }\n            });\n        }\n\n        function pauseBelow() {\n            if (window.innerWidth < settings.pauseBelow) { $multislider.addClass('ms-PAUSE'); }\n            $(window).on('resize', function() {\n                if (window.innerWidth < settings.pauseBelow) {\n                    $multislider.addClass('ms-PAUSE');\n                } else {\n                    $multislider.removeClass('ms-PAUSE');\n                }\n            });\n        }\n\n        // used if method is called after initialization\n        function getStringArgs(str) {\n            if (typeof $multislider.data(str) !== 'undefined') {\n                $multislider.data(str)();\n            } else {\n                console.error(\"Multislider currently only accepts the following methods: next, prev, pause, play\");\n            }\n        }\n\n        // saves data object to DOM element\n        function saveData() {\n            $multislider.data({\n                \"pause\": function() { $multislider.addClass('ms-PAUSE'); },\n                \"unPause\": function() { $multislider.removeClass('ms-PAUSE'); },\n                \"continuous\": function() { $multislider.removeClass('ms-PAUSE');\n                    continuousLeft(); },\n                \"next\": function() { overRidePause(singleLeft); },\n                \"nextAll\": function() { overRidePause(allLeft); },\n                \"prev\": function() { overRidePause(singleRight); },\n                \"prevAll\": function() { overRidePause(allRight); },\n                \"settings\": settings\n            });\n        }\n\n        // used when calling 'next', 'prev' methods\n        function overRidePause(animation) {\n            if ($multislider.hasClass('ms-PAUSE')) {\n                $multislider.removeClass('ms-PAUSE');\n                animation();\n                $multislider.addClass('ms-PAUSE');\n            } else {\n                animation();\n            }\n            resetInterval();\n        }\n\n        // CRITICAL for items to be perfectly side-by-side without floating them\n        function minifyContent() {\n            $msContent.contents().filter(function() {\n                return (this.nodeType == 3 && !/\\S/.test(this.nodeValue));\n            }).remove();\n        }\n\n        // updated options with defaults, measure slide widths for animation calculations, carry out setting implementations\n        function createSettings() {\n            defaults = settings || {\n                continuous: false, // endless scrolling with no pauses\n                slideAll: false, // slide all visible slides, or just one at a time\n                // autoSlide: true,\t// DEPRECATED\n                interval: 2000, // time bewteen slide animation, 0 or 'false' prevents auto-sliding\n                duration: 500, // duration of slide animation\n                hoverPause: true, // pause slideshow on hover\n                pauseAbove: null, // pause above specified screen width\n                pauseBelow: null // pause below specified screen width\n            };\n\n            settings = $.extend({}, defaults, data);\n\n            findItemWidth();\n            animateDuration = settings.duration;\n\n            if (settings.hoverPause) { pauseHover(); }\n            // autoSlide is being depricated | Feb 2 2017\n            if (settings.continuous !== true && settings.interval !== 0 && settings.interval !== false && settings.autoSlide !== false) { autoSlide(); }\n            if (settings.pauseAbove !== null && typeof settings.pauseAbove === 'number') { pauseAbove(); }\n            if (settings.pauseBelow !== null && typeof settings.pauseBelow === 'number') { pauseBelow(); }\n        }\n\n        // determine between single and multi-slide animations\n        function selectAnimations() {\n            if (settings.continuous) {\n                settings.autoSlide = false;\n                continuousLeft();\n            } else if (settings.slideAll) {\n                animateSlideRight = $multislider.data('prevAll');\n                animateSlideLeft = $multislider.data('nextAll');\n            } else {\n                animateSlideRight = $multislider.data('prev');\n                animateSlideLeft = $multislider.data('next');\n            }\n        }\n\n        // measure slide width, for animation calculations\n        function findItemWidth() {\n            reTargetSlides();\n            animateDistance = $imgFirst.width();\n            var left = parseInt($msContent.find('.item:first').css('padding-left'));\n            var right = parseInt($msContent.find('.item:first').css('padding-right'));\n            if (left !== 0) { animateDistance += left; }\n            if (right !== 0) { animateDistance += right; }\n        }\n\n        // recursive auto-slide loop\n        function autoSlide() {\n            autoSlideInterval = setInterval(function() {\n                if (!$multislider.hasClass('ms-PAUSE')) {\n                    animateSlideLeft();\n                }\n            }, settings.interval);\n        }\n\n        function resetInterval() {\n            if (settings.interval !== 0 && settings.interval !== false && settings.continuous !== true) {\n                clearInterval(autoSlideInterval);\n                autoSlide();\n            }\n        }\n\n        // target first and last visible slides before each new animation\n        function reTargetSlides() {\n            $imgFirst = $msContent.find('.item:first');\n            $imgLast = $msContent.find('.item:last');\n        }\n\n        // prevent animation firing if multislider is currently animating\n        // all animations pass through this function, which emits events, and adds/removes animating class\n        function isItAnimating(callback) {\n            if (!$multislider.hasClass('ms-animating') &&\n                !$multislider.hasClass('ms-HOVER') &&\n                !$multislider.hasClass('ms-PAUSE')) {\n                $multislider.trigger('ms.before.animate'); // event!\n                $multislider.addClass('ms-animating');\n                callback(); //callback is animation\n            }\n        }\n\n        // update multislider at the end of each animation\n        function doneAnimating() {\n            if ($multislider.hasClass('ms-animating')) {\n                $multislider.removeClass('ms-animating');\n                $multislider.trigger('ms.after.animate'); // event!\n            }\n        }\n\n        // logic for pausing and restarting the multislider on hover\n        function pauseHover() {\n            // continuous scroll pause slightly different\n            if (settings.continuous) {\n                $msContent.on('mouseover', function() {\n                    doneAnimating();\n                    $msContent.children('.item:first').stop();\n                });\n                $msContent.on('mouseout', function() {\n                    continuousLeft();\n                });\n            } else {\n                // regular animation pausing\n                $msContent.on('mouseover', function() {\n                    $multislider.addClass('ms-HOVER');\n                });\n                $msContent.on('mouseout', function() {\n                    $multislider.removeClass('ms-HOVER');\n                });\n            }\n        }\n\n        // calculate remaining animation, if stopped mid-animation and resuming\n        function midAnimateResume() {\n            animateDuration = settings.duration;\n            var currentMargin = parseFloat($msContent.find('.item:first').css(\"margin-left\"));\n            var percentageRemaining = 1 - (currentMargin / -(animateDistance - 1));\n            animateDuration = percentageRemaining * animateDuration;\n        }\n\n        // determine how many slides need to be moved over, if slideAll is true\n        function calcNumSlidesToMove() {\n            totalWidth = $msContent.width(); // total width of .MS-content containing all visible slides\n            numberVisibleSlides = Math.floor(totalWidth / animateDistance); // number of (visible) slides needed to be moved in each animation\n        }\n\n\n        // ==== ANIMATION FUNCTIONS ====\n        // =============================\n        function continuousLeft() {\n            isItAnimating(function() {\n                reTargetSlides();\n                midAnimateResume();\n                $imgFirst.animate({ marginLeft: -(animateDistance + 1) }, {\n                    duration: animateDuration,\n                    easing: \"linear\",\n                    complete: function() {\n                        $imgFirst.insertAfter($imgLast).removeAttr(\"style\");\n                        doneAnimating();\n                        continuousLeft();\n                    }\n                });\n            });\n        }\n\n        function allLeft() {\n            isItAnimating(function() {\n                reTargetSlides();\n                calcNumSlidesToMove();\n\n                var $clonedItemSet = $msContent.children('.item').clone();\n                var filteredClones = $clonedItemSet.splice(0, numberVisibleSlides);\n\n                $msContent.append(filteredClones);\n\n                $imgFirst.animate({ marginLeft: -totalWidth }, {\n                    duration: animateDuration,\n                    easing: \"swing\",\n                    complete: function() {\n                        $($msContent.children('.item').splice(0, numberVisibleSlides)).remove();\n                        doneAnimating();\n                    }\n                });\n            });\n        }\n\n        function allRight() {\n            isItAnimating(function() {\n                reTargetSlides();\n                calcNumSlidesToMove();\n\n                var numberTotalSlides = $msContent.children('.item').length;\n                var $clonedItemSet = $msContent.children('.item').clone();\n                var filteredClones = $clonedItemSet.splice(numberTotalSlides - numberVisibleSlides, numberTotalSlides);\n\n                $($(filteredClones)[0]).css('margin-left', -totalWidth); // give clone array negative margin before preppending\n                $msContent.prepend(filteredClones);\n\n                reTargetSlides();\n\n                $imgFirst.animate({\n                    marginLeft: 0\n                }, {\n                    duration: animateDuration,\n                    easing: \"swing\",\n                    complete: function() {\n                        numberTotalSlides = $msContent.find('.item').length;\n                        $($msContent.find('.item').splice(numberTotalSlides - numberVisibleSlides, numberTotalSlides)).remove();\n                        $imgFirst.removeAttr('style');\n                        doneAnimating();\n                    }\n                });\n            });\n        }\n\n        function singleLeft() {\n            isItAnimating(function() {\n                reTargetSlides();\n                $imgFirst.animate({\n                    marginLeft: -animateDistance\n                }, {\n                    duration: animateDuration,\n                    easing: \"swing\",\n                    complete: function() {\n                        $imgFirst.detach().removeAttr('style').appendTo($msContent);\n                        doneAnimating();\n                    }\n                });\n            });\n        }\n\n        function singleRight() {\n            isItAnimating(function() {\n                reTargetSlides();\n                $imgLast.css('margin-left', -animateDistance).prependTo($msContent);\n                $imgLast.animate({\n                    marginLeft: 0\n                }, {\n                    duration: animateDuration,\n                    easing: \"swing\",\n                    complete: function() {\n                        $imgLast.removeAttr(\"style\");\n                        doneAnimating();\n                    }\n                });\n            });\n        }\n        return $multislider;\n    }\n})(jQuery);"]},"metadata":{},"sourceType":"module"}